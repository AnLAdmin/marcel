1: ls should render files as relative to the requested directory

E.g. ls /tmp should show file_in_tmp, not /tmp/file_in_tmp.

----------------------------------------------------------------------

FIXED?

2: Line wrapping is broken, (when typing commands)

See GNU readline horizontal-scroll-mode.
https://tiswww.cwru.edu/php/chet/readline/rluserman.html#SEC10

I think this is fixed (see util.py). But if not, I was about to send
this to stackoverflow:

I am implementing a shell with some novel features, in Python 3. My code uses the input() function and readline module to read command lines, support command history, line editing, and so on. I'm passing a prompt, which includes ANSI escape codes (for color) to the input function, and things are mostly working.

But occasionally, something will go wrong:

- Only a prefix of the prompt is printed.

- If I recall a command and edit it, the editing goes to the wrong position within the line.

- Sometimes, typing a long line, wrapping will occur far too early, before the end of the terminal line is reached.

These problems are not highly reproducible. However, so far, it appears that omitting the ANSI escapes from the prompt fixes the problem.

I have googled this problem extensively, and the closest match I've been able to locate is this: https://stackoverflow.com/questions/17432993/adding-ansi-color-escape-sequences-to-a-bash-prompt-results-in-bad-cursor-positi. But this seems to be a different problem. (My problem seems involves input(), the readline module, and the underlying GNU readline library, not bash.)

I'm looking for advice on a direction to pursue.

----------------------------------------------------------------------

3. Getting the group of some gids kills the shell

M jao@cheese:~$ ls -fr /opt
Traceback (most recent call last):
  File "/home/jao/git/osh2/src/osh/main.py", line 45, in <module>
    main()
  File "/home/jao/git/osh2/src/osh/main.py", line 41, in main
    process_input(run_command)
  File "/home/jao/git/osh2/src/osh/main.py", line 26, in process_input
    handle_line(line)
  File "/home/jao/git/osh2/src/osh/main.py", line 15, in run_command
    command.execute()
  File "/home/jao/git/osh2/src/osh/core.py", line 238, in execute
    self.pipeline.receive(None)
  File "/home/jao/git/osh2/src/osh/core.py", line 198, in receive
    self.first_op.receive(x)
  File "/home/jao/git/osh2/src/osh/op/ls.py", line 109, in receive
    self.visit(file, 0)
  File "/home/jao/git/osh2/src/osh/op/ls.py", line 135, in visit
    self.visit(file, level + 1)
  File "/home/jao/git/osh2/src/osh/op/ls.py", line 135, in visit
    self.visit(file, level + 1)
  File "/home/jao/git/osh2/src/osh/op/ls.py", line 135, in visit
    self.visit(file, level + 1)
  [Previous line repeated 1 more time]
  File "/home/jao/git/osh2/src/osh/op/ls.py", line 131, in visit
    self.send_path(path)
  File "/home/jao/git/osh2/src/osh/op/ls.py", line 144, in send_path
    self.send(file)
  File "/home/jao/git/osh2/src/osh/core.py", line 100, in send
    self.receiver.receive_input_or_error(x)
  File "/home/jao/git/osh2/src/osh/core.py", line 115, in receive_input_or_error
    self.receive(normalize_output(x))
  File "/home/jao/git/osh2/src/osh/op/out.py", line 90, in receive
    out = out.render_full(self.use_color())
  File "/home/jao/git/osh2/src/osh/object/file.py", line 91, in render_full
    line = self._formatted_metadata()
  File "/home/jao/git/osh2/src/osh/object/file.py", line 131, in _formatted_metadata
    '{:8s}'.format(groupname(self.gid)),
  File "/home/jao/git/osh2/src/osh/util.py", line 17, in groupname
    return grp.getgrgid(gid).gr_name
KeyError: 'getgrgid(): gid not found: 143'

----------------------------------------------------------------------

FIXED

4. Receive_complete called too many times following remote fork

@jao [ gen 3 ] | red . +

Should produce (localhost, 3). But it produces that output TWICE.

----------------------------------------------------------------------

5. Unspecified behavior for red

red . + does something given inputs of size 3. What is supposed to
happen? Document and test for it.

