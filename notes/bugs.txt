34. Tab completion vs. sudo -- shell crash

If we enter this much of a command:

    sudo -i [ ls /home/jao/.dbus/ses

tab-completion runs into permission problems trying to do its work.

----------------------------------------------------------------------

47. Emacs in background doesn't work

- Run emacs
- Ctrl-Z

Goes to background, but bg and fg do not revive it.

Complete "help interaction" when this is working.

As of about June 9, job control works on the console, but emacs never
suspends, and in fact it is no longer owned by the marcel
process. Exiting marcel leaves emacs running.

----------------------------------------------------------------------

48. Syntax error in .marcel.py should be handled more gracefully

jao@cheese:~/git/marcel/test$ marcel
Traceback (most recent call last):
  File "/usr/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/jao/git/marcel/marcel/main.py", line 211, in <module>
    MAIN = Main()
  File "/home/jao/git/marcel/marcel/main.py", line 90, in __init__
    self.env = marcel.env.Environment(self.config)
  File "/home/jao/git/marcel/marcel/env.py", line 136, in __init__
    self.read_config(config_file)
  File "/home/jao/git/marcel/marcel/env.py", line 201, in read_config
    exec(config_source, self.namespace, locals)
  File "<string>", line 64
    cat = [ map (f: (f, f.readlines())) | expand 1 ]
                  ^
SyntaxError: invalid syntax

----------------------------------------------------------------------

58. Infinite loop in help

There was a typo in the HELP for ps:

HELP = '''
{L,wrap=F}ps [-u|--user [USER]] [-g|--group [GROUP}] [-p|--pid PID] [-c|--command STRING]

Note that GROUP is followed by } instead of ]. That seemed to put 
help into an infinite loop.
----------------------------------------------------------------------

66. Parsing error due to whitespace

M-0.9.15 jao@cheese:~/git/marcel$ gen 3 | map(x: x+1)
Error: Running map(lambda: f'''map{x: x+1}''') on (0,): <lambda>() takes 0 positional arguments but 1 was given
Error: Running map(lambda: f'''map{x: x+1}''') on (1,): <lambda>() takes 0 positional arguments but 1 was given
Error: Running map(lambda: f'''map{x: x+1}''') on (2,): <lambda>() takes 0 positional arguments but 1 was given

Lexer.consolidate_tokens consolidates map and (...

IS THIS A BUG?

----------------------------------------------------------------------

67. Pipeline syntax needs to be generalized

    M-0.9.15 jao@cheese:~/git/marcel$ gen 3 | map (x: x + 5)
    5
    6
    7
    M-0.9.15 jao@cheese:~/git/marcel$ gen 3 | [x: map (x + 5)]
    Parsing error at position 8 of "...gen 3 | [x: map (x + 5)]...": Unexpected token type: Begin([)

This syntax:

    ... | [ ... ]

is rejected by the parser, which means we can't have pipelines with
parameters as literals. Fix the parser.

----------------------------------------------------------------------

69. Shell crashes on bad first arg to loop

M-0.9.17 jao@cheese:~$ loop (10, 1) [select (x, f: x > 0) | emit | map (x, f: (x-1, f*x))]
Traceback (most recent call last):
  File "/usr/lib/python3.8/runpy.py", line 193, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.8/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/jao/git/marcel/marcel/main.py", line 271, in <module>
    MAIN.run()
  File "/home/jao/git/marcel/marcel/main.py", line 123, in run
    self.run_command(line)
  File "/home/jao/git/marcel/marcel/main.py", line 136, in run_command
    pipeline = parser.parse()
  File "/home/jao/git/marcel/marcel/parser.py", line 704, in parse
    return self.command()
  File "/home/jao/git/marcel/marcel/parser.py", line 710, in command
    return self.pipeline(None)
  File "/home/jao/git/marcel/marcel/parser.py", line 730, in pipeline
    op_sequence = Parser.ensure_sequence(self.op_sequence())
  File "/home/jao/git/marcel/marcel/parser.py", line 740, in op_sequence
    op_args = self.op_args()
  File "/home/jao/git/marcel/marcel/parser.py", line 761, in op_args
    op = self.create_op(op_token, arg_tokens)
  File "/home/jao/git/marcel/marcel/parser.py", line 824, in create_op
    op = self.create_op_builtin(op_token, arg_tokens)
  File "/home/jao/git/marcel/marcel/parser.py", line 852, in create_op_builtin
    args.append(x.value(self) if isinstance(x, Token) else x)
  File "/home/jao/git/marcel/marcel/parser.py", line 298, in value
    self._function = marcel.functionwrapper.FunctionWrapper(function=function,
  File "/home/jao/git/marcel/marcel/functionwrapper.py", line 56, in __init__
    self._globals = self._function.__globals__
AttributeError: 'tuple' object has no attribute '__globals__'

----------------------------------------------------------------------

79. less doesn't work

----------------------------------------------------------------------

85. Any env var can be deleted

Even important ones, like PROMPT. Some of them need to be protected.

----------------------------------------------------------------------

87. Assign pipeline without brackets

Should it be allowed? If not, this failure mode is pretty bad:

    M-0.10.8 jao@cheese:~/git/marcel/marcel/object$ g = gen 5
    M-0.10.8 jao@cheese:~/git/marcel/marcel/object$ (g)
    gen

The string "gen" is assigned and the rest is ignored.

----------------------------------------------------------------------

89. Be able to execute marcel script from inside marcel

Don't require use of host shell.
    
----------------------------------------------------------------------

95. emacs no longer working

Specific to root.

M-0.10.13 root@cheese:/media/backup/daily/2020.08.26# emacs
emacs: Could not open file: /dev/tty
Escaped command failed with exit code 1: emacs
None

----------------------------------------------------------------------

97. ... | args [n: sql 'insert ... values(%s) (n)' does, essentially, autocommit

The problem is that each invocation of the pipeline does sql setup, receive, receive_complete.

----------------------------------------------------------------------

99. Redirection doesn't work for executables

This works, putting a list of Files into x:

    ls > x

This does not work:

    date > x

Error message: Variable date is undefined.

----------------------------------------------------------------------

100. Space after tab-completed flag is missing

ls --r<tab>

should produce '--recursive '. The space is omitted.

----------------------------------------------------------------------

102. Set ops can't be applied to lists

And the lists can't be anywhere, not even deeply nested. The problem
is hashing, which is applied deeply, and may reach a list. Lists are
not hashable.

Comparison-based algorithms are out too, since, for example:

    >>> [1,2] < ['a']
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    TypeError: '<' not supported between instances of 'int' and 'str'

Hmm.

----------------------------------------------------------------------

108. quote_files is failing, but only through the API?!

This fails, in test_api:

    TEST.run(test=lambda: run(ls('/tmp/a', file=True) |
                              args(lambda files: bash(f'mv -t d {quote_files(files)}'), all=True)),
             verification=lambda: run(ls('d', file=True) | map(lambda f: f.name)),
             expected_out=['a file', "a file with a ' mark", 'a_file'])

the quoted files are messed up, mv -t d ... fails. The command passed to bash is:

    mv -t d '/tmp/a/a file' '/tmp/a/a file with a '"'"' mark' /tmp/a/a_file

But somehow the quote marks get escaped, I think. Test is disabled for now.

The equivalent test in test_ops succeeds!?!?!?!

----------------------------------------------------------------------

113. Farcel error reporting is broken

ls /nosuchfile: Generates an error
@jao [ls /nosuchfile]: Error message shows up as output (see test_api test_remote)

Need to review how errors and exceptions are reported from farcel.

----------------------------------------------------------------------

114. Ctrl-C doesn't clean up temp file

- gen 10000000 > x
- ctrl-c while it's running

The env var isn't there, but the temp file is.

----------------------------------------------------------------------

123. This should be a syntax error

M-0.11.1 jao@cheese:~/git/marcel$ p = gen n | args [n: echo (n)]
M-0.11.1 jao@cheese:~/git/marcel$ (p)
gen

----------------------------------------------------------------------

127. API env missing symbols

E.g. USER, HOME.

----------------------------------------------------------------------

128. Tab completion vs. syntactic sugar

For "var > ..." or "./file > ...", tab completion doesn't work. Tab
completion for first symbol expects executable.

----------------------------------------------------------------------

137. Why are there excess tokens?

ls *.{py,txt}
[ls(depth=recursive, include=, filename=?)] followed by excess tokens: Comma(,), String(txt})

{} should be part of the FILENAME

Because comma is parsed.

----------------------------------------------------------------------

144. Use of colon in a bash command is problematic

COLON is a Lexer token.

M 0.11.12 jao@cheese:~$ bash scp ~/.marcel.py jorenstein@nd:/home/jorenstein
[bash(args=None)] followed by excess tokens: Colon(:), String(/home/jorenstein)

----------------------------------------------------------------------

147. Space after tab-completion is broken

Sometimes there's a space when there shouldn't be, and vice versa.

Check ops, args, filenames.

----------------------------------------------------------------------

148. psql doesn't work when it needs a password:

    M 0.11.12 jao@cheese ~/consulting/nasuni/analytics/load_simulation$ bash psql nasuni < schema.sql
    Password for user jao: 
    psql: error: FATAL:  password authentication failed for user "jao"
    Escaped command failed with exit code 2: psql nasuni < schema.sql
    None
    M 0.11.12 jao@cheese ~/consulting/nasuni/analytics/load_simulation$ bash -i psql nasuni < schema.sql
    Password for user jao: 
    psql: error: FATAL:  password authentication failed for user "jao"
    Escaped command failed with exit code 2: psql nasuni < schema.sql
    None

----------------------------------------------------------------------

149. Field widths don't adapt well

M 0.11.12 jao@cheese ~/consulting/nasuni/analytics/load_simulation$ ls
drwxrwxr-x   jao    jao        4096   2020 Nov 19 13:49:28   .
drwxrwxr-x   jao    jao        4096   2020 Nov 19 13:49:27   .idea
-rw-rw-r--   jao    jao    4786675634   2020 Nov 19 13:50:33   1day.csv
-rw-rw-r--   jao    jao        1908   2020 Nov 19 13:49:27   main.py
-rw-rw-r--   jao    jao        2845   2020 Nov 19 12:40:01   notes.txt
-rw-rw-r--   jao    jao        2446   2020 Nov 19 12:52:23   schema.sql
drwxrwxr-x   jao    jao        4096   2020 Nov 19 11:27:25   venv

----------------------------------------------------------------------

150. Help wrapping is broken

Spec:

    {p,wrap=F,indent=4}
    COLOR_SCHEME.file_file = COLOR_WHITE_BOLD
    COLOR_SCHEME.file_dir = Color(0, 2, 3, BOLD)
    COLOR_SCHEME.file_link = Color(4, 2, 0, BOLD)
    COLOR_SCHEME.file_executable = Color(0, 4, 0, BOLD)
    ...

Output:

        COLOR_SCHEME.file_file = COLOR_WHITE_BOLD
    COLOR_SCHEME.file_dir = Color(0, 2, 3, BOLD)
    COLOR_SCHEME.file_link = Color(4, 2, 0, BOLD)
    COLOR_SCHEME.file_executable = Color(0, 4, 0, BOLD)
    ...

----------------------------------------------------------------------

151. Sort done by pipeline-valued arg not working

Define this: byt = [sort (f: f.mtime)]

Then:

Sorting explicitly works:

    M 0.11.14 jao@cheese ~$ ls Downloads | sort (f: f.mtime)
    -rw-rw-r--   jao    jao       51973   2020 Aug 15 10:50:40   Screenshot from 2020-08-15 10-50-39.png
    -rw-rw-r--   jao    jao       51471   2020 Aug 15 10:57:11   Screenshot from 2020-08-15 10-57-10.png
    -rw-rw-r--   jao    jao       12054   2020 Aug 15 11:35:12   Screenshot from 2020-08-15 11-35-11.png
    -rw-rw-r--   jao    jao       11457   2020 Aug 15 11:36:16   Screenshot from 2020-08-15 11-36-13.png
    -rw-rw-r--   jao    jao       47219   2020 Aug 15 11:38:46   Screenshot from 2020-08-15 11-38-44.png
    -rw-rw-r--   jao    jao       14645   2020 Aug 15 11:41:36   Screenshot from 2020-08-15 11-41-35.png
    -rw-rw-r--   jao    jao       28798   2020 Aug 15 11:51:33   Screenshot from 2020-08-15 11-51-31.png
    -rw-rw-r--   jao    jao       52104   2020 Aug 15 11:53:44   Screenshot from 2020-08-15 11-53-43.png
    -rw-rw-r--   jao    jao       24154   2020 Aug 15 13:57:33   Screenshot from 2020-08-15 13-57-32.png
    -rw-rw-r--   jao    jao       10660   2020 Aug 15 14:00:24   Screenshot from 2020-08-15 14-00-23.png
    -rw-rw-r--   jao    jao       34980   2020 Aug 15 14:03:28   Screenshot from 2020-08-15 14-03-26.png
    -rw-rw-r--   jao    jao       52256   2020 Aug 15 14:22:10   Screenshot from 2020-08-15 14-22-09.png
    -rw-rw-r--   jao    jao       20926   2020 Aug 15 14:44:05   Screenshot from 2020-08-15 14-44-03.png
    -rw-rw-r--   jao    jao       20923   2020 Aug 15 14:45:02   Screenshot from 2020-08-15 14-45-01.png
    -rw-rw-r--   jao    jao       20937   2020 Aug 15 14:45:43   Screenshot from 2020-08-15 14-45-42.png
    -rw-rw-r--   jao    jao    19855068   2020 Aug 17 19:31:04   DFABookInstall#1.pdf
    -rw-rw-r--   jao    jao      259427   2020 Aug 22 10:25:46   elections.jpg
    -rw-rw-r--   jao    jao      261481   2020 Sep 24 19:13:49   mumpsweirdness.zip
    -rw-rw-r--   jao    jao    68328818   2020 Sep 27 21:18:01   discord-0.0.12.deb
    -rw-rw-r--   jao    jao       18934   2020 Sep 28 15:00:25   magritte-notrepro_400x400.jpg
    -rw-rw-r--   jao    jao      173649   2020 Sep 29 10:41:39   Screenshot from 2020-09-29 10-41-34.png
    -rw-rw-r--   jao    jao      444664   2020 Oct 28 10:50:06   OpenExternalObject (1).pdf
    -rw-rw-r--   jao    jao      560652   2020 Oct 28 10:50:06   OpenExternalObject.pdf
    -rw-rw-r--   jao    jao     2873437   2020 Oct 29 19:12:50   IMG_6236.jpg
    -rw-rw-r--   jao    jao     6034565   2020 Oct 29 19:13:24   IMG_6238.jpg
    -rw-rw-r--   jao    jao        3968   2020 Oct 30 00:12:49   Screenshot from 2020-10-30 00-12-44.png
    drwxrwxr-x   jao    jao        4096   2020 Nov 15 18:26:48   repair
    -rw-rw-r--   jao    jao       73274   2020 Nov 30 12:36:03   SnipImage.JPG
    -rw-rw-r--   jao    jao       56889   2020 Nov 30 12:36:13   Jerry.jpg
    drwxr-xr-x   jao    jao        4096   2020 Nov 30 12:36:15   .


But the stored pipeline does not, removing files:

    M 0.11.14 jao@cheese ~$ ls Downloads | byt
    drwxrwxr-x   jao    jao        4096   2020 Nov 15 18:26:48   repair

----------------------------------------------------------------------

152. Assertion complaining about attempt to read from reservoir open for write

    TEST.run('fact = [x: gen (x) 1 | args [n: gen (n) 1 | red * | map (f: (n, f))]]')
    TEST.run('fact (5) > f')
    TEST.run('f >')

Causes:

    Traceback (most recent call last):
      File "/home/jao/git/marcel/test/test_ops.py", line 1274, in <module>
        main()
      File "/home/jao/git/marcel/test/test_ops.py", line 1269, in main
        main_dev()
      File "/home/jao/git/marcel/test/test_ops.py", line 1260, in main_dev
        TEST.run('f >')
      File "/home/jao/git/marcel/test/test_base.py", line 123, in run
        self.main.run_command(test)
      File "/home/jao/git/marcel/marcel/main.py", line 156, in run_command
        command.execute()
      File "/home/jao/git/marcel/marcel/core.py", line 396, in execute
        self.pipeline.setup()
      File "/home/jao/git/marcel/marcel/core.py", line 337, in setup
        op.setup()
      File "/home/jao/git/marcel/marcel/op/load.py", line 110, in setup
        self.reader = iter(self.picklefile)
      File "/home/jao/git/marcel/marcel/picklefile.py", line 38, in __iter__
        return self.reader()
      File "/home/jao/git/marcel/marcel/picklefile.py", line 48, in reader
        assert len(self.writers) == 0, self
    AssertionError: Reservoir(/tmp/tmppdf62cm1: readers = 0, writers = 1)
