5. Unspecified behavior for red

red . + does something given inputs of size 3. What is supposed to
happen? Document and test for it.

----------------------------------------------------------------------

10. sort all by itself produces None as output

This seems wrong:

     M jao@cheese:~/git/marcel$ sort
     None

----------------------------------------------------------------------

11. ls () works?!

M jao@cheese:~/git/marcel$ ls ()
drwxr-xr-x   jao      jao              4096   2020 Feb 25 15:33:00   .
drwxr-xr-x   jao      jao              4096   2020 Feb 26 23:43:50   .git
-rw-r--r--   jao      jao                20   2020 Jan 24 17:07:26   .gitignore
drwxr-xr-x   jao      jao              4096   2020 Feb 26 23:59:32   .idea
-rw-r--r--   jao      jao              6420   2020 Feb 25 15:59:14   README.md
drwxr-xr-x   jao      jao              4096   2020 Feb 25 11:22:15   bin
drwxr-xr-x   jao      jao              4096   2020 Feb 21 13:22:22   experiments
drwxr-xr-x   jao      jao              4096   2020 Feb 26 09:35:03   notes
drwxr-xr-x   jao      jao              4096   2020 Feb 19 10:31:26   src
drwxr-xr-x   jao      jao              4096   2020 Feb 25 09:38:13   test

----------------------------------------------------------------------

17. Tab completion for filenames with spaces and escapes

E.g., tab completion for a\ b doesn't work.

----------------------------------------------------------------------

23. Space after tab completion is off

Want a space when the choice is unambiguous. Don't want it otherwide,
e.g. complete xy with strings xya xyb.

----------------------------------------------------------------------

24. cat problem causes marcel to crash

M jao@cheese:/tmp$ cat /tmp/nsm*
Traceback (most recent call last):
  File "/home/jao/git/marcel/src/marcel/main.py", line 122, in <module>
    MAIN.run()
  File "/home/jao/git/marcel/src/marcel/main.py", line 77, in run
    self.run_command(line)
  File "/home/jao/git/marcel/src/marcel/main.py", line 89, in run_command
    Command(pipeline).execute()
  File "/home/jao/git/marcel/src/marcel/main.py", line 40, in execute
    self.pipeline.receive_complete()
  File "/home/jao/git/marcel/src/marcel/core.py", line 240, in receive_complete
    self.first_op.receive_complete()
  File "/home/jao/git/marcel/src/marcel/op/bash.py", line 61, in receive_complete
    self.runner.run()
  File "/home/jao/git/marcel/src/marcel/op/bash.py", line 85, in run
    stdout, stderr = process.communicate(input=input)
  File "/usr/lib/python3.7/subprocess.py", line 964, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.7/subprocess.py", line 1755, in _communicate
    self.stdout.errors)
  File "/usr/lib/python3.7/subprocess.py", line 841, in _translate_newlines
    data = data.decode(encoding, errors)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xa0 in position 1247: invalid start byte


Also:

M jao@cheese:~$ find teaching
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jao/git/marcel/src/marcel/job.py", line 130, in run_command
    env_vars = command.execute()
  File "/home/jao/git/marcel/src/marcel/main.py", line 43, in execute
    self.pipeline.receive_complete()
  File "/home/jao/git/marcel/src/marcel/core.py", line 300, in receive_complete
    self.first_op.receive_complete()
  File "/home/jao/git/marcel/src/marcel/op/bash.py", line 79, in receive_complete
    self.runner.run()
  File "/home/jao/git/marcel/src/marcel/op/bash.py", line 124, in run
    stdout, stderr = process.communicate(input=input)
  File "/usr/lib/python3.7/subprocess.py", line 964, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.7/subprocess.py", line 1755, in _communicate
    self.stdout.errors)
  File "/usr/lib/python3.7/subprocess.py", line 841, in _translate_newlines
    data = data.decode(encoding, errors)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0x87 in position 1113486: invalid start byte


----------------------------------------------------------------------

34. Tab completion vs. sudo -- shell crash

If we enter this much of a command:

    sudo -i [ ls /home/jao/.dbus/ses

tab-completion runs into permission problems trying to do its work.

----------------------------------------------------------------------

41. Blank line should not be ignored on continuation line

Blank lines are ignored, which is fine. But if the blank line is a
continuation line, then the current command should be ended and executed.

----------------------------------------------------------------------

42. Errors piped to executables are broken

Odd results:

M jao@cheese:/etc/sysctl.d$ gen 3 | map (x: 1/(1-x)) | xargs echo
Error(map(x: 1/(1-x)) failed on (1,): division by zero)
1.0 -1.0
M jao@cheese:/etc/sysctl.d$ gen 3 | map (x: 1/(1-x)) | echo
Error(map(x: 1/(1-x)) failed on (1,): division by zero)

----------------------------------------------------------------------

43. Bad markup shouldn't crash the shell

And probably don't throw Exception.

M jao@cheese:~$ help configuration
Traceback (most recent call last):
  File "/home/jao/git/marcel/src/marcel/main.py", line 159, in <module>
    MAIN.run()
  File "/home/jao/git/marcel/src/marcel/main.py", line 90, in run
    self.run_command(line)
  File "/home/jao/git/marcel/src/marcel/main.py", line 107, in run_command
    command.execute()
  File "/home/jao/git/marcel/src/marcel/main.py", line 41, in execute
    self.pipeline.receive(None)
  File "/home/jao/git/marcel/src/marcel/core.py", line 292, in receive
    self.first_op.receive(x)
  File "/home/jao/git/marcel/src/marcel/op/help.py", line 52, in receive
    help_text = Help.op_help(op_module) if op_module else self.topic_help()
  File "/home/jao/git/marcel/src/marcel/op/help.py", line 81, in topic_help
    return formatter.format(help_text)
  File "/home/jao/git/marcel/src/marcel/helpformatter.py", line 298, in format
    blocks = self.find_explicit_paragraph_boundaries(text)
  File "/home/jao/git/marcel/src/marcel/helpformatter.py", line 321, in find_explicit_paragraph_boundaries
    blocks.append(Paragraph(self, text[open:close]))
  File "/home/jao/git/marcel/src/marcel/helpformatter.py", line 208, in __init__
    self.paragraph_markup = ParagraphMarkup(markup)
  File "/home/jao/git/marcel/src/marcel/helpformatter.py", line 85, in __init__
    self.parse_paragraph_formatting()
  File "/home/jao/git/marcel/src/marcel/helpformatter.py", line 91, in parse_paragraph_formatting
    self.raise_invalid_formatting_exception()
  File "/home/jao/git/marcel/src/marcel/helpformatter.py", line 74, in raise_invalid_formatting_exception
    raise Exception(f'Invalid formatting specification: {self.text}')
Exception: Invalid formatting specification: {process_...}
