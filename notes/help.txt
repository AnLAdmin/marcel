ArgParser cleanup

Cleanup ArgParser so that a ColorScheme can be supplied to it, so that
help messages can be colorized.

- parse: 

  + Pass in op_modules from Main.
  + Use it instead of OP_MODULES.
  + Parser no longer needs global_state (it was just attached to the
    arg parser)

- ArgParsers

  + Take global_state as input, save on marcel.core.ArgParser.
  - Get help strings: description, epilog, from the module,
    and pass the to the ArgParser constructor, or otherwise attach
    them to the ArgParser.

- core ArgParser

  - Colorize the description and epilog using colorscheme obtained from
    global_state.

- Ops

  + Get rid of argparser class field.
  + Get rid of arg_parser() function from ops and core.Op.

- Other cleanup

  - Eliminate dependencies of marcel modules on marcel.op
    modules. E.g. out, used by Command.

----------------------------------------------------------------------

Formatting:

Colorizing throws off text-wrapping because the escape characters are
not zero-width. There is a colorizing text wrapper for argparse, but
it is 3rd party.

ALSO: paragraphs not preserved. Maybe use RawDescriptionTextHandler
and take over formatting completely? There will still be a problem in
wrapping text with escape codes.



Alternative:

- Have arg parser use RawDescriptionTextHandler

- Start with the marked-up text, e.g. '''This is a {flag} blah blah blah'''. 

- Note the indexes of words in the markup: markup_positions

- Remove the markup (plaintext) and wrap text (wrapped).

- Use markup_positions to re-insert markup in the wrapped text
  (allowing for words split by hyphenation).

- Colorize.



{} isn't enough. Need more markup, e.g. for headings:

- {}: highlight
- b{}: bold
- f{}: highlighting meant to indicate fixed-width
- indented text: don't wrap
