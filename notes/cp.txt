Interesting flags from bash cp man page:

       --attributes-only
              don't copy the file data, just the attributes

       --backup[=CONTROL]
              make a backup of each existing destination file

       -b     like --backup but does not accept an argument

       -d     same as --no-dereference --preserve=links

       -H     follow command-line symbolic links in SOURCE

       -l, --link
              hard link files instead of copying

       -L, --dereference
              always follow symbolic links in SOURCE

       -n, --no-clobber
              do not overwrite an existing file (overrides a previous -i option)

       -P, --no-dereference
              never follow symbolic links in SOURCE

       -R, -r, --recursive
              copy directories recursively

       -s, --symbolic-link
              make symbolic links instead of copying


-H: What does this do?

-L: What does this do? Sounds like -H. See the find man page. Find has
HLP flags relating to symlinks. Seems to be related.

-s: Seems like ln -s, except that it has to stay in the same directory.

----------------------------------------------------------------------

Initially, do:


  -l: Create a hard link to the file
  -P: Copy symlink as is. If link target is relative, then copy may not make sense.
  -r

----------------------------------------------------------------------

cp can create hard links and symbolic links. This overlaps with the ln
command. (ln does hard link, or symbolic if -s specified.)

----------------------------------------------------------------------

cp -P: preserves links. "never follow" means the link is kept as is.
cp -H: Top-level link is followed. Below top-level, link is kept as is.
cp -L: All symlinks followed.

----------------------------------------------------------------------

Design:

        cp [SOURCE_FILENAME ...] TARGET_FILENAME

SOURCE_FILENAME            Filename or glob pattern of a file to be moved.
TARGET_FILENAME            Filename or glob pattern of the destination.

The source files are copied to the target. Even if TARGET_FILENAME is
a glob pattern, a single target must be identified.  If there is one
source file, then the target may be an existing file, an existing
directory, or a path to a non-existent file. If there are multiple
source files, then the target must be an existing directory.

If no SOURCE_FILENAMEs are specified, then the source files are taken
from the input stream. In this case, each input object must be a
1-tuple containing a File, and TARGET_FILENAME must identify a
directory that already exists. (Note that the behavior is based on
syntax -- whether SOURCE_FILENAMEs are provided.  If a SOURCE_FILENAME
is provided, then source files are not taken from the input stream,
even if SOURCE_FILENAME fails to identify any files.)

Flags (from linux cp):

-r | --recursive

-P | --preserve-all-symlinks      keep all symlinks (don't follow them)

-H | --preserve-non-top-symlinks                       follow top-level symlinks only

-L | --preserve-no-symlinks                       follow all symlinks

-l | --hard-link-to-source                      create hard links?

-s | --symlink-to-source                       create symlinks?

-p | --preserve                                preserve metadata

----------------------------------------------------------------------

Details of copying

- File to non-existent path

  - target gets name of source

- File to file

  - target keeps name

- File to symlink

  - Copy to target

- File to directory

  - File goes inside dir. 
  - Presumably file to file rules then apply

- Symlink to non-existent path

  - Like copying file, but PHL flags apply

- Symlink to file

  - Like copying file

- Symlink to symlink

  - Like copying file, but PHL flags apply. E.g., with -P, target of
    target symlink is modified.

- Symlink to directory

  - Like copying file, but PHL flags apply

- Directory to non-existent path

  - new dir created, contents copied.

- Directory to file

  - disallowed

- Directory to symlink

  - copy to target

- Directory to directory

  - copy to inside dir
